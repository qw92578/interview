<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.9.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.cd</groupId>
    <artifactId>interview</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>interview</name>
    <description>project for interview</description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <dubbo-version>2.6.2</dubbo-version>
        <curator-version>2.12.0</curator-version>
        <spring-cloud.version>Greenwich.RELEASE</spring-cloud.version>
    </properties>

    <dependencies>

        <!-- 引入该坐标 则一直在登录页面-->
        <!--<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>-->

        <!--<dependency>
           <groupId>org.springframework.security</groupId>
           <artifactId>spring-security-test</artifactId>
           <scope>test</scope>
       </dependency>-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>

        <!--工具包-->
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-commons</artifactId>
        </dependency>

        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.47</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.5</version>
        </dependency>

        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>runtime</scope>
        </dependency>


        <!-- https://mvnrepository.com/artifact/io.springfox/springfox-swagger2 -->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>2.9.2</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/io.springfox/springfox-swagger-ui -->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>2.9.2</version>
        </dependency>

        <dependency>
            <groupId>com.github.pagehelper</groupId>
            <artifactId>pagehelper</artifactId>
            <version>5.0.0</version>
        </dependency>

        <!-- 热部署 -->
        <!-- devtools可以实现页面热部署（即页面修改后会立即生效，
            这个可以直接在application.properties文件中配置spring.thymeleaf.cache=false来实现） -->
        <!-- 实现类文件热部署（类文件修改后不会立即生效），实现对属性文件的热部署。 -->
        <!-- 即devtools会监听classpath下的文件变动，并且会立即重启应用（发生在保存时机），
            注意：因为其采用的虚拟机机制，该项重启是很快的 -->
        <!-- （1）base classloader （Base类加载器）：加载不改变的Class，例如：第三方提供的jar包。 -->
        <!-- （2）restart classloader（Restart类加载器）：加载正在开发的Class。 -->
        <!-- 为什么重启很快，因为重启的时候只是加载了在开发的Class，没有重新加载第三方的jar包。 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <!-- optional=true, 依赖不会传递, 该项目依赖devtools;
                之后依赖boot项目的项目如果想要使用devtools, 需要重新引入 -->
            <optional>true</optional>
            <scope>true</scope>
        </dependency>
    </dependencies>


    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>

        <resources>
            <!-- 引入jar -->
           <!-- <resource>
                <directory>${basedir}/lib/</directory>
                <targetPath>BOOT-INF/lib/</targetPath>
                <includes>
                    <include>*.jar</include>
                </includes>
                <filtering>false</filtering>
            </resource>
            <resource>
                <directory>${basedir}/src/main/java</directory>
                <includes>
                    <include>linux-x86/*.so</include>
                    <include>linux-x86-64/*.so</include>
                    <include>win32-x86/*.dll</include>
                    <include>win32-x86/*.manifest</include>
                    <include>win32-x86/*.pdb</include>
                    <include>win32-x86-64/*.dll</include>
                    <include>win32-x86-64/*.manifest</include>
                    <include>win32-x86-64/*.pdb</include>
                    <include>*.properties</include>
                </includes>
                <filtering>false</filtering>
            </resource>-->
            <resource>
                <directory>${basedir}/src/main/resources</directory>
                <includes>
                    <include>mybatis/config/*.xml</include>
                    <include>mybatis/mapper/*.xml</include>
                    <include>*.properties</include>
                    <include>*.yml</include>
                    <include>*.xml</include>
                </includes>
            </resource>
            <resource>
                <directory>${basedir}/src/main/resources</directory>
                <includes>
                    <include>static/**</include>
                    <include>static/**/**</include>
                    <include>static/**/**/**</include>
                    <include>static/**/**/**/**</include>
                    <include>templates/**</include>
                    <include>templates/**/**</include>
                    <!--<include>static/css_lib/css_lib/*.eot</include>-->
                    <!--<include>static/css_lib/css_lib/*.svg</include>-->
                    <!--<include>static/css_lib/css_lib/*.ttf</include>-->
                    <!--<include>static/css_lib/css_lib/*.woff</include>-->
                    <!--<include>static/css_lib/css_lib/*.woff2</include>-->
                    <!--<include>static/css_lib/*.css</include>-->
                    <!--<include>static/css_lib/lib/*.css</include>-->
                    <!--<include>static/css_lib/lib/calendar/*.css</include>-->
                    <!--<include>static/css_lib/lib/font-awesome/*.*</include>-->
                    <!--<include>static/css_lib/lib/font-awesome/*.*</include>-->
                    <!--<include>mybatis/mapper/*.xml</include>-->
                    <!--<include>*.properties</include>-->
                    <!--<include>*.yml</include>-->
                    <!--<include>*.xml</include>-->
                </includes>
            </resource>
        </resources>
    </build>

</project>
